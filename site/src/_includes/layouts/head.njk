<head>
  <title>{{ title if title else site.title }}</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="description" content="{{ description }}">
  <meta name="twitter:card" content="summary">
  <meta name="twitter:site" content="https://getquick.link">
  <meta name="og:title" content="{{ title }}">
  <meta name="twitter:title" content="{{ title }}">
  <meta name="twitter:description" content="{{ description }}">
  <meta name="og:description" content="{{ description }}">
  <meta name="twitter:image"
    content="https://camo.githubusercontent.com/d9e978c30d6e62fa13b4aea5af2560eebb67e20f/68747470733a2f2f692e696d6775722e636f6d2f4e56525a4c48762e706e67">
  <meta name="og:image"
    content="https://camo.githubusercontent.com/d9e978c30d6e62fa13b4aea5af2560eebb67e20f/68747470733a2f2f692e696d6775722e636f6d2f4e56525a4c48762e706e67">
  <meta name="og:url" content="https://getquick.link">
  <meta name="og:type" content="website">
  <meta charset="UTF-8">
  <link rel="apple-touch-icon" sizes="180x180" href="/assets/images/icons/apple-touch-icon.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/assets/images/icons/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/assets/images/icons/favicon-16x16.png">
  <link rel="manifest" href="/site.webmanifest">
  <link rel="mask-icon" href="/assets/images/icons/safari-pinned-tab.svg" color="#5bbad5">
  <meta name="msapplication-TileColor" content="#da532c">
  <meta name="msapplication-config" content="/browserconfig.xml">
  <meta name="theme-color" content="#ffffff">
  <link rel="preload" href="{{ '/styles/main.css' | url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">
  <link rel="preload" href="{{ '/styles/footer.css' | url }}" as="style"
    onload="this.onload=null;this.rel='stylesheet'">
  <link rel="preload" href="{{ '/styles/github-markdown.min.css' | url }}" as="style"
    onload="this.onload=null;this.rel='stylesheet'">
  <link rel="preload" href="{{ 'https://cdn.jsdelivr.net/npm/highlightjs@9.16.2/styles/solarized-dark.min.css' | url }}" as="style"
    onload="this.onload=null;this.rel='stylesheet'">
  <link rel="stylesheet" href="{{ '/styles/main.css' | url }}">
  <link rel="stylesheet" href="{{ '/styles/footer.css' | url }}">
  <link rel="stylesheet" href="{{ '/styles/copy-snippet.css' | url }}">
  <link rel="stylesheet" href="{{ '/styles/github-markdown.css' | url }}">
  {# TODO: opt for theme and tweak the background color by avoiding github markdown #}
  <noscript>
    <link rel="stylesheet" href="{{ '/styles/github-markdown.min.css' | url }}"></noscript>
  <noscript>
    <link rel="stylesheet" href="{{ '/styles/solarized-dark.min.css' | url }}"></noscript>
  <script>
    /*! loadCSS rel=preload polyfill. [c]2017 Filament Group, Inc. MIT License */
    (function (w) {
      "use strict"; if (!w.loadCSS) { w.loadCSS = function () { } }
      var rp = loadCSS.relpreload = {}; rp.support = (function () {
        var ret; try { ret = w.document.createElement("link").relList.supports("preload") } catch (e) { ret = !1 }
        return function () { return ret }
      })(); rp.bindMediaToggle = function (link) {
        var finalMedia = link.media || "all"; function enableStylesheet() {
          if (link.addEventListener) { link.removeEventListener("load", enableStylesheet) } else if (link.attachEvent) { link.detachEvent("onload", enableStylesheet) }
          link.setAttribute("onload", null); link.media = finalMedia
        }
        if (link.addEventListener) { link.addEventListener("load", enableStylesheet) } else if (link.attachEvent) { link.attachEvent("onload", enableStylesheet) }
        setTimeout(function () { link.rel = "stylesheet"; link.media = "only x" }); setTimeout(enableStylesheet, 3000)
      }; rp.poly = function () {
        if (rp.support()) { return }
        var links = w.document.getElementsByTagName("link"); for (var i = 0; i < links.length; i++) { var link = links[i]; if (link.rel === "preload" && link.getAttribute("as") === "style" && !link.getAttribute("data-loadcss")) { link.setAttribute("data-loadcss", !0); rp.bindMediaToggle(link) } }
      }; if (!rp.support()) { rp.poly(); var run = w.setInterval(rp.poly, 500); if (w.addEventListener) { w.addEventListener("load", function () { rp.poly(); w.clearInterval(run) }) } else if (w.attachEvent) { w.attachEvent("onload", function () { rp.poly(); w.clearInterval(run) }) } }
      if (typeof exports !== "undefined") { exports.loadCSS = loadCSS }
      else { w.loadCSS = loadCSS }
    }(typeof global !== "undefined" ? global : this))
  </script>
</head>